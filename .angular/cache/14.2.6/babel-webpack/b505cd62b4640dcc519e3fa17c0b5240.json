{"ast":null,"code":"import _asyncToGenerator from \"D:/AngularProject/mapa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n///<reference path=\"../../../../node_modules/@types/googlemaps/index.d.ts\"/>\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ElementRef, Renderer2 } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"divMap\"];\nconst _c1 = [\"inputPlaces\"];\nexport class MapaComponent {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.markers = [];\n    this.formMapas = new FormGroup({\n      busqueda: new FormControl(''),\n      direccion: new FormControl(''),\n      referencia: new FormControl(''),\n      ciudad: new FormControl(''),\n      provincia: new FormControl(''),\n      region: new FormControl('')\n    });\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    var _this = this;\n\n    const opciones = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (position) {\n          yield _this.cargarMapa(position);\n\n          _this.cargarAutocomplete();\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(), null, opciones);\n    } else {\n      console.log(\"navegador no compatible\");\n    }\n  }\n\n  onSubmit() {\n    console.log(\"Datos del formulario: \", this.formMapas.value);\n  }\n\n  //calcular ruta\n  mapRuta() {\n    const directionService = new google.maps.DirectionsService();\n    const directionRender = new google.maps.DirectionsRenderer();\n    directionRender.setMap(this.mapa);\n    directionService.route({\n      origin: 'Quilpué, Chile',\n      destination: 'Viña del Mar, Chile',\n      travelMode: google.maps.TravelMode.DRIVING\n    }, resultado => {\n      console.log(resultado);\n      directionRender.setDirections(resultado);\n      this.distancia = resultado.routes[0].legs[0].distance.text;\n    });\n  }\n\n  cargarAutocomplete() {\n    const autocomplete = new google.maps.places.Autocomplete(this.renderer.selectRootElement(this.inputPlaces.nativeElement), {\n      componentRestrictions: {\n        country: [\"CL\"]\n      },\n      fields: [\"address_components\", \"geometry\"],\n      types: [\"address\"]\n    });\n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\n      const place = autocomplete.getPlace();\n      console.log(\"el place completo es:\", place);\n      this.mapa.setCenter(place.geometry.location);\n      const marker = new google.maps.Marker({\n        position: place.geometry.location\n      });\n      marker.setMap(this.mapa);\n      this.llenarFormulario(place);\n    });\n  }\n\n  llenarFormulario(place) {\n    const addressNameFormat = {\n      'street_number': 'short_name',\n      'route': 'long_name',\n      'administrative_area_level_1': 'short_name',\n      'administrative_area_level_2': 'short_name',\n      'administrative_area_level_3': 'short_name',\n      'country': 'long_name'\n    };\n\n    const getAddressComp = type => {\n      for (const component of place.address_components) {\n        if (component.types[0] === type) {\n          return component[addressNameFormat[type]];\n        }\n      }\n\n      return ' ';\n    };\n\n    const componentForm = {\n      direccion: 'location',\n      ciudad: \"administrative_area_level_3\",\n      provincia: 'administrative_area_level_2',\n      region: 'administrative_area_level_1'\n    };\n    Object.entries(componentForm).forEach(entry => {\n      const [key, value] = entry;\n      this.formMapas.controls[key].setValue(getAddressComp(value));\n    });\n    this.formMapas.controls['direccion'].setValue(getAddressComp('route') + ' ' + getAddressComp('street_number'));\n  }\n\n  cargarMapa(position) {\n    const opciones = {\n      center: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),\n      zoom: 17,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    this.mapa = new google.maps.Map(this.renderer.selectRootElement(this.divMap.nativeElement), opciones);\n    const markerPosition = new google.maps.Marker({\n      position: this.mapa.getCenter(),\n      title: \"David\"\n    });\n    markerPosition.setMap(this.mapa);\n    this.markers.push(markerPosition);\n  }\n\n}\n\nMapaComponent.ɵfac = function MapaComponent_Factory(t) {\n  return new (t || MapaComponent)(i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nMapaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapaComponent,\n  selectors: [[\"app-mapa\"]],\n  viewQuery: function MapaComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.divMap = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputPlaces = _t.first);\n    }\n  },\n  decls: 12,\n  vars: 0,\n  consts: [[1, \"form\", \"panel\"], [\"src\", \"https://fonts.gstatic.com/s/i/googlematerialicons/location_pin/v5/24px.svg\", \"alt\", \"\", 1, \"sb-title-icon\"], [\"type\", \"text\", \"placeholder\", \"Direccion\", \"formControlName\", \"direccion\"], [\"type\", \"text\", \"placeholder\", \"Ciudad\", \"formControlName\", \"ciudad\", 1, \"ciudad\"], [\"type\", \"text\", \"placeholder\", \"Departamento\", \"formControlName\", \"Departamento\"], [1, \"half-input-container\"], [\"type\", \"text\", \"placeholder\", \"Barrio\", \"formControlName\", \"region\", 1, \"half-input\"], [\"type\", \"submit\", 1, \"button-cta\"], [1, \"mapa\"], [\"divMap\", \"\"]],\n  template: function MapaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n      i0.ɵɵelement(2, \"img\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2)(4, \"input\", 3)(5, \"input\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 7);\n      i0.ɵɵtext(9, \"Solicitar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"div\", 8, 9);\n    }\n  },\n  styles: [\".mapa[_ngcontent-%COMP%] {\\r\\n    width: 600px;\\r\\n    height: 600px;\\r\\n}\\r\\n#inputPlaces[_ngcontent-%COMP%]{\\r\\n  padding: 10px;\\r\\n    width: 600px;\\r\\n    height: 40px;\\r\\n}\\r\\nbody[_ngcontent-%COMP%] {\\r\\n    margin: 0;\\r\\n  }\\r\\n.sb-title[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    top: -12px;\\r\\n    font-family: Roboto, sans-serif;\\r\\n    font-weight: 500;\\r\\n  }\\r\\n.sb-title-icon[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    top: -5px;\\r\\n  }\\r\\n.card-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    height: 500px;\\r\\n    width: 600px;\\r\\n  }\\r\\n.panel[_ngcontent-%COMP%] {\\r\\n    background: white;\\r\\n    width: 300px;\\r\\n    padding: 20px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-around;\\r\\n  }\\r\\n.half-input-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n  }\\r\\n.half-input[_ngcontent-%COMP%] {\\r\\n    max-width: 120px;\\r\\n  }\\r\\n.map[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n  }\\r\\nh2[_ngcontent-%COMP%] {\\r\\n    margin: 0;\\r\\n    font-family: Roboto, sans-serif;\\r\\n  }\\r\\ninput[_ngcontent-%COMP%] {\\r\\n    height: 30px;\\r\\n  }\\r\\ninput[_ngcontent-%COMP%] {\\r\\n    border: 0;\\r\\n    border-bottom: 1px solid black;\\r\\n    font-size: 14px;\\r\\n    font-family: Roboto, sans-serif;\\r\\n    font-style: normal;\\r\\n    font-weight: normal;\\r\\n  }\\r\\ninput[_ngcontent-%COMP%]:focus::placeholder {\\r\\n    color: white;\\r\\n  }\\r\\n.button-cta[_ngcontent-%COMP%] {\\r\\n    height: 40px;\\r\\n    width: 40%;\\r\\n    background: #3367d6;\\r\\n    color: white;\\r\\n    font-size: 15px;\\r\\n    text-transform: uppercase;\\r\\n    font-family: Roboto, sans-serif;\\r\\n    border: 0;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.48);\\r\\n    cursor: pointer;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixhQUFhO0FBQ2pCO0FBQ0E7RUFDRSxhQUFhO0lBQ1gsWUFBWTtJQUNaLFlBQVk7QUFDaEI7QUFHQTtJQUNJLFNBQVM7RUFDWDtBQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLFVBQVU7SUFDViwrQkFBK0I7SUFDL0IsZ0JBQWdCO0VBQ2xCO0FBRUE7SUFDRSxrQkFBa0I7SUFDbEIsU0FBUztFQUNYO0FBRUE7SUFDRSxhQUFhO0lBQ2IsYUFBYTtJQUNiLFlBQVk7RUFDZDtBQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qiw2QkFBNkI7RUFDL0I7QUFFQTtJQUNFLGFBQWE7SUFDYiw4QkFBOEI7RUFDaEM7QUFFQTtJQUNFLGdCQUFnQjtFQUNsQjtBQUVBO0lBQ0UsWUFBWTtFQUNkO0FBRUE7SUFDRSxTQUFTO0lBQ1QsK0JBQStCO0VBQ2pDO0FBRUE7SUFDRSxZQUFZO0VBQ2Q7QUFFQTtJQUNFLFNBQVM7SUFDVCw4QkFBOEI7SUFDOUIsZUFBZTtJQUNmLCtCQUErQjtJQUMvQixrQkFBa0I7SUFDbEIsbUJBQW1CO0VBQ3JCO0FBRUE7SUFDRSxZQUFZO0VBQ2Q7QUFFQTtJQUNFLFlBQVk7SUFDWixVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLCtCQUErQjtJQUMvQixTQUFTO0lBQ1Qsa0JBQWtCO0lBQ2xCLHdDQUF3QztJQUN4QyxlQUFlO0VBQ2pCIiwiZmlsZSI6Im1hcGEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXBhIHtcclxuICAgIHdpZHRoOiA2MDBweDtcclxuICAgIGhlaWdodDogNjAwcHg7XHJcbn1cclxuI2lucHV0UGxhY2Vze1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbn1cclxuXHJcblxyXG5ib2R5IHtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgXHJcbiAgLnNiLXRpdGxlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogLTEycHg7XHJcbiAgICBmb250LWZhbWlseTogUm9ib3RvLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICB9XHJcbiAgXHJcbiAgLnNiLXRpdGxlLWljb24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAtNXB4O1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5wYW5lbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gIH1cclxuICBcclxuICAuaGFsZi1pbnB1dC1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICB9XHJcbiAgXHJcbiAgLmhhbGYtaW5wdXQge1xyXG4gICAgbWF4LXdpZHRoOiAxMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLm1hcCB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGgyIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG8sIHNhbnMtc2VyaWY7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0IHtcclxuICAgIGhlaWdodDogMzBweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXQge1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0OmZvY3VzOjpwbGFjZWhvbGRlciB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIC5idXR0b24tY3RhIHtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHdpZHRoOiA0MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMzM2N2Q2O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG8sIHNhbnMtc2VyaWY7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuNDgpO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH0iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","ElementRef","Renderer2","MapaComponent","constructor","renderer","markers","formMapas","busqueda","direccion","referencia","ciudad","provincia","region","ngOnInit","ngAfterViewInit","opciones","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","getCurrentPosition","position","cargarMapa","cargarAutocomplete","console","log","onSubmit","value","mapRuta","directionService","google","maps","DirectionsService","directionRender","DirectionsRenderer","setMap","mapa","route","origin","destination","travelMode","TravelMode","DRIVING","resultado","setDirections","distancia","routes","legs","distance","text","autocomplete","places","Autocomplete","selectRootElement","inputPlaces","nativeElement","componentRestrictions","country","fields","types","event","addListener","place","getPlace","setCenter","geometry","location","marker","Marker","llenarFormulario","addressNameFormat","getAddressComp","type","component","address_components","componentForm","Object","entries","forEach","entry","key","controls","setValue","center","LatLng","coords","latitude","longitude","zoom","mapTypeId","MapTypeId","ROADMAP","Map","divMap","markerPosition","getCenter","title","push","i0","selectors","viewQuery"],"sourceRoot":"","sources":["D:\\AngularProject\\mapa\\src\\app\\components\\mapa\\mapa.component.ts","D:\\AngularProject\\mapa\\src\\app\\components\\mapa\\mapa.component.html"],"sourcesContent":["///<reference path=\"../../../../node_modules/@types/googlemaps/index.d.ts\"/>\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms'\nimport { ElementRef, ViewChild, Renderer2 } from '@angular/core'\n\n@Component({\n  selector: 'app-mapa',\n  templateUrl: './mapa.component.html',\n  styleUrls: ['./mapa.component.css']\n})\nexport class MapaComponent implements OnInit {\n\n  @ViewChild('divMap') divMap!: ElementRef;\n  @ViewChild('inputPlaces') inputPlaces!: ElementRef;\n\n  mapa!: google.maps.Map;\n  markers: google.maps.Marker[];\n  distancia!: string;\n  formMapas!: FormGroup;\n\n  constructor(private renderer: Renderer2) {\n    this.markers = [];\n\n    this.formMapas = new FormGroup({\n\n      busqueda: new FormControl(''),\n      direccion: new FormControl(''),\n      referencia: new FormControl(''),\n      ciudad: new FormControl(''),\n      provincia: new FormControl(''),\n      region: new FormControl('')\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n\n    const opciones = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    }\n\n    if (navigator.geolocation) {\n\n      navigator.geolocation.getCurrentPosition(async (position) => {\n\n        await this.cargarMapa(position);\n        this.cargarAutocomplete();\n\n      }, null, opciones);\n\n\n    } else {\n      console.log(\"navegador no compatible\")\n    }\n\n  };\n\n\n\n  onSubmit() {\n    console.log(\"Datos del formulario: \", this.formMapas.value)\n  };\n\n\n  //calcular ruta\n  mapRuta() {\n\n    const directionService = new google.maps.DirectionsService();\n    const directionRender = new google.maps.DirectionsRenderer();\n\n    directionRender.setMap(this.mapa);\n\n    directionService.route({\n\n      origin: 'Quilpué, Chile',\n      destination: 'Viña del Mar, Chile',\n      travelMode: google.maps.TravelMode.DRIVING\n\n    }, resultado => {\n      console.log(resultado);\n      directionRender.setDirections(resultado);\n\n      this.distancia = resultado.routes[0].legs[0].distance.text;\n\n    });\n\n  }\n\n\n\n  private cargarAutocomplete() {\n\n    const autocomplete = new google.maps.places.Autocomplete(this.renderer.selectRootElement(this.inputPlaces.nativeElement), {\n      componentRestrictions: {\n        country: [\"CL\"]\n      },\n      fields: [\"address_components\", \"geometry\"],\n      types: [\"address\"],\n    })\n\n\n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\n\n      const place: any = autocomplete.getPlace();\n      console.log(\"el place completo es:\", place)\n\n      this.mapa.setCenter(place.geometry.location);\n      const marker = new google.maps.Marker({\n        position: place.geometry.location\n      });\n\n      marker.setMap(this.mapa);\n      this.llenarFormulario(place);\n    })\n  }\n\n  llenarFormulario(place: any) {\n\n    const addressNameFormat: any = {\n      'street_number': 'short_name',\n      'route': 'long_name',\n      'administrative_area_level_1': 'short_name',\n      'administrative_area_level_2': 'short_name',\n      'administrative_area_level_3': 'short_name',\n      'country': 'long_name',\n\n    };\n\n    const getAddressComp = (type: any) => {\n      for (const component of place.address_components) {\n        if (component.types[0] === type) {\n\n          return component[addressNameFormat[type]];\n        }\n      }\n      return ' '\n    };\n\n    const componentForm = {\n      direccion: 'location',\n      ciudad: \"administrative_area_level_3\",\n      provincia: 'administrative_area_level_2',\n      region: 'administrative_area_level_1'\n    };\n\n\n\n\n    Object.entries(componentForm).forEach(entry => {\n      const [key, value] = entry;\n\n      this.formMapas.controls[key].setValue(getAddressComp(value))\n    });\n\n    this.formMapas.controls['direccion'].setValue(getAddressComp('route') + ' ' + getAddressComp('street_number'))\n  };\n\n  cargarMapa(position: any): any {\n\n    const opciones = {\n      center: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),\n      zoom: 17,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n\n    this.mapa = new google.maps.Map(this.renderer.selectRootElement(this.divMap.nativeElement), opciones)\n\n    const markerPosition = new google.maps.Marker({\n      position: this.mapa.getCenter(),\n      title: \"David\",\n    });\n\n    markerPosition.setMap(this.mapa);\n    this.markers.push(markerPosition);\n  };\n\n\n}\n","<!-- <button (click)=\"mapRuta()\">Calcular ruta</button>\n<h1>La distancia es: {{distancia}}</h1> -->\n\n\n<!-- <div class=\"formulario\">\n    <form [formGroup]=\"formMapas\" (ngSubmit)=\"onSubmit()\">\n  \n      <input type=\"text\" #inputPlaces id=\"inputPlaces\" formControlName=\"busqueda\"> -->\n  \n      <div class=\"form panel\">\n  \n        <div>\n          <img class=\"sb-title-icon\" src=\"https://fonts.gstatic.com/s/i/googlematerialicons/location_pin/v5/24px.svg\"\n            alt=\"\">\n        </div>\n  \n        <input type=\"text\" placeholder=\"Direccion\" formControlName=\"direccion\" />\n        <!-- <input type=\"text\" placeholder=\"Edificio, departamento, piso (opcional)\" formControlName=\"referencia\" /> -->\n        <input type=\"text\" placeholder=\"Ciudad\" class=\"ciudad\" formControlName=\"ciudad\" />\n        <input type=\"text\" placeholder=\"Departamento\" formControlName=\"Departamento\" />\n        <div class=\"half-input-container\">\n          <input type=\"text\" class=\"half-input\" placeholder=\"Barrio\" formControlName=\"region\" />\n        </div>\n  \n        <button class=\"button-cta\" type=\"submit\">Solicitar</button>\n  \n      </div>\n\n      <div class=\"mapa\" #divMap></div>\n      \n    <!-- </form>\n  </div> -->"]},"metadata":{},"sourceType":"module"}